/**
 * @file NetworkEntity.h
 * @brief Заголовочный файл базового класса NetworkEntity для всех сущностей сети.
 */

#pragma once

#include <iostream>
#include <string>
#include <memory>

 /**
  * @defgroup entity_module Модуль сущностей сети
  * @brief Классы для работы с базовыми сущностями корпоративной сети
  * @{
  */

  /**
   * @brief Абстрактный базовый класс для всех сущностей корпоративной сети.
   *
   * Содержит общие свойства и методы, которые должны быть реализованы
   * всеми производными классами (устройствами и доменами).
   */
class NetworkEntity {
protected:
    std::string id;   ///< Уникальный строковый идентификатор сущности внутри домена

public:
    /**
     * @brief Конструктор базового класса NetworkEntity.
     * @param[in] id Уникальный строковый идентификатор сущности.
     */
    NetworkEntity(const std::string& id) : id(id) {}

    /**
     * @brief Виртуальный деструктор для обеспечения корректного удаления производных классов.
     */
    virtual ~NetworkEntity() = default;

    /**
     * @brief Возвращает идентификатор сущности.
     * @return Константная ссылка на строковый идентификатор сущности.
     */
    const std::string& getId() const { return id; }

    /**
     * @brief Чисто виртуальная функция для вывода информации о сущности.
     * @details Должна быть реализована в каждом производном классе.
     */
    virtual void printInfo() const = 0;

    /**
     * @brief Чисто виртуальная функция для получения типа сущности.
     * @return Строка, идентифицирующая тип сущности.
     */
    virtual std::string getType() const = 0;
};

/** @} */ // Конец группы entity_module